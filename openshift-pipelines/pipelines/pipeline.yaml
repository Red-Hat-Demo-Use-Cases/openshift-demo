apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: development-build-and-deploy
  namespace: application-pipeline
spec:
  params:
    - description: Application name
      name: deployment-name
      type: string
    - description: Repository URL to clone from
      name: git-url
      type: string
    - description: 'Revision to checkout. (branch, tag, sha, ref, etc...)'
      name: git-revision
      type: string
    - description: Subdirectory inside the `output` Workspace to clone the repo into.
      name: git-subdirectory
      type: string
    - description: Image name to be build
      name: IMAGE
      type: string
  
  tasks:

    - name: fetch-repository
      params:
        - name: url
          value: $(params.git-url)
        # - name: deleteExisting
        #   value: 'true'
        - name: revision
          value: $(params.git-revision)
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: shared-workspace

    # - name: create-feature-namespace
    #   params:
    #     - name: SCRIPT
    #       value: 'oc create ns $(params.deployment-name)-$(params.git-revision)'
    #   taskRef:
    #     kind: ClusterTask
    #     name: openshift-client
    
    - name: build-image
      params:
        - name: TLSVERIFY
          value: 'false'
        - name: IMAGE
          value: 'quay.io/dovid/$(params.IMAGE):$(tasks.fetch-repository.results.commit)'
        - name: CONTEXT
          value: $(params.git-subdirectory)
        - name: DOCKERFILE
          value: ./Containerfile
        - name: FORMAT
          value: oci
      runAfter:
        - fetch-repository
      taskRef:
        kind: ClusterTask
        name: buildah
      workspaces:

        - name: source
          workspace: shared-workspace

        - name: dockerconfig
          workspace: dockerconfig-workspace
    

# value: '$(params.IMAGE):$(params.git-revision)'



    # - name: apply-manifests-kustomize
    #   params:
    #     - name: manifest_dir
    #       value: ./simple-webapp-php/deployments
    #   runAfter:
    #     - build-image
    #   taskRef:
    #     kind: Task
    #     name: apply-manifests-kustomize
    #   workspaces:
    #     - name: source
    #       workspace: shared-workspace
    # - name: update-deployment
    #   params:
    #     - name: deployment
    #       value: $(params.deployment-name)
    #     - name: IMAGE
    #       value: '$(params.IMAGE):$(tasks.fetch-repository.results.commit)'
    #   runAfter:
    #     - apply-manifests
    #   taskRef:
    #     kind: Task
    #     name: update-deployment
    #   workspaces:
    #     - name: source
    #       workspace: shared-workspace

  workspaces:
    - name: shared-workspace
    - name: dockerconfig-workspace